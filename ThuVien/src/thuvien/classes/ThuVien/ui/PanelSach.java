/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package thuvien.classes.ThuVien.ui;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Font;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import org.jdatepicker.JDatePicker;
import org.jdatepicker.UtilDateModel;
import thuvien.classes.ThuVien.dao.SachDAO;
import thuvien.classes.ThuVien.entity.Sach;
import thuvien.classes.ThuVien.helper.Auth;
import thuvien.classes.ThuVien.helper.MsgBox;

/**
 *
 * @author QUOC DAO
 */
public class PanelSach extends javax.swing.JPanel {

    /**
     * Creates new form PanelSach
     */
    public PanelSach() {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabSach = new javax.swing.JTabbedPane();
        pnlSach = new javax.swing.JPanel();
        lblMaSach = new javax.swing.JLabel();
        lblTenSach = new javax.swing.JLabel();
        lblLoaiSach = new javax.swing.JLabel();
        lblTacGia = new javax.swing.JLabel();
        lblSoLuong = new javax.swing.JLabel();
        lblThoiGianNhap = new javax.swing.JLabel();
        txtMaSach = new javax.swing.JTextField();
        txtTenSach = new javax.swing.JTextField();
        txtLoaiSach = new javax.swing.JTextField();
        txtTacGia = new javax.swing.JTextField();
        txtSoLuong = new javax.swing.JTextField();
        txtThoiGianNhap = new javax.swing.JTextField();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnLamMoi = new javax.swing.JButton();
        pnlBang = new javax.swing.JPanel();
        btnNext = new javax.swing.JButton();
        btnLast = new javax.swing.JButton();
        btnFirst = new javax.swing.JButton();
        btnPrev = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSach = new javax.swing.JTable();
        txtTimKiem = new javax.swing.JTextField();
        lblTimKiem = new javax.swing.JLabel();

        pnlSach.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblMaSach.setText("Mã sách");
        pnlSach.add(lblMaSach, new org.netbeans.lib.awtextra.AbsoluteConstraints(135, 16, -1, -1));

        lblTenSach.setText("Tên sách");
        pnlSach.add(lblTenSach, new org.netbeans.lib.awtextra.AbsoluteConstraints(135, 102, -1, -1));

        lblLoaiSach.setText("Loại sách");
        pnlSach.add(lblLoaiSach, new org.netbeans.lib.awtextra.AbsoluteConstraints(135, 188, -1, -1));

        lblTacGia.setText("Tên tác giả");
        pnlSach.add(lblTacGia, new org.netbeans.lib.awtextra.AbsoluteConstraints(472, 16, -1, -1));

        lblSoLuong.setText("Số lượng");
        pnlSach.add(lblSoLuong, new org.netbeans.lib.awtextra.AbsoluteConstraints(472, 102, -1, -1));

        lblThoiGianNhap.setText("Thời gian nhập");
        pnlSach.add(lblThoiGianNhap, new org.netbeans.lib.awtextra.AbsoluteConstraints(472, 188, -1, -1));
        pnlSach.add(txtMaSach, new org.netbeans.lib.awtextra.AbsoluteConstraints(135, 45, 200, -1));
        pnlSach.add(txtTenSach, new org.netbeans.lib.awtextra.AbsoluteConstraints(135, 131, 200, -1));
        pnlSach.add(txtLoaiSach, new org.netbeans.lib.awtextra.AbsoluteConstraints(135, 224, 200, -1));
        pnlSach.add(txtTacGia, new org.netbeans.lib.awtextra.AbsoluteConstraints(472, 45, 200, -1));
        pnlSach.add(txtSoLuong, new org.netbeans.lib.awtextra.AbsoluteConstraints(472, 131, 200, -1));
        pnlSach.add(txtThoiGianNhap, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 220, 200, 30));

        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/thuvien/classes/ThuVien/images/Icon_24px/Accept.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        pnlSach.add(btnThem, new org.netbeans.lib.awtextra.AbsoluteConstraints(163, 266, 104, -1));

        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/thuvien/classes/ThuVien/images/Icon_24px/Edit.png"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });
        pnlSach.add(btnSua, new org.netbeans.lib.awtextra.AbsoluteConstraints(276, 266, 104, -1));

        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/thuvien/classes/ThuVien/images/Icon_24px/Delete.png"))); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        pnlSach.add(btnXoa, new org.netbeans.lib.awtextra.AbsoluteConstraints(389, 266, 104, -1));

        btnLamMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/thuvien/classes/ThuVien/images/Icon_24px/add.png"))); // NOI18N
        btnLamMoi.setText("Làm mới");
        btnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiActionPerformed(evt);
            }
        });
        pnlSach.add(btnLamMoi, new org.netbeans.lib.awtextra.AbsoluteConstraints(502, 266, 132, -1));

        tabSach.addTab("Sách", pnlSach);

        pnlBang.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnNext.setText(">");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });
        pnlBang.add(btnNext, new org.netbeans.lib.awtextra.AbsoluteConstraints(378, 276, -1, -1));

        btnLast.setText(">|");
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });
        pnlBang.add(btnLast, new org.netbeans.lib.awtextra.AbsoluteConstraints(432, 276, -1, -1));

        btnFirst.setText("|<");
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });
        pnlBang.add(btnFirst, new org.netbeans.lib.awtextra.AbsoluteConstraints(264, 276, -1, -1));

        btnPrev.setText("<");
        btnPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrevActionPerformed(evt);
            }
        });
        pnlBang.add(btnPrev, new org.netbeans.lib.awtextra.AbsoluteConstraints(324, 276, -1, -1));

        tblSach.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã sách", "Tên sách", "Loại sách", "Tác giả", "Số lượng", "TG nhập"
            }
        ));
        tblSach.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSachMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblSach);

        pnlBang.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 66, 770, 180));

        txtTimKiem.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtTimKiem.setForeground(new java.awt.Color(153, 153, 153));
        txtTimKiem.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTimKiemFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTimKiemFocusLost(evt);
            }
        });
        txtTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemKeyReleased(evt);
            }
        });
        pnlBang.add(txtTimKiem, new org.netbeans.lib.awtextra.AbsoluteConstraints(526, 27, 200, -1));

        lblTimKiem.setText("Tìm kiếm");
        pnlBang.add(lblTimKiem, new org.netbeans.lib.awtextra.AbsoluteConstraints(441, 28, -1, -1));

        tabSach.addTab("Bảng", pnlBang);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabSach, javax.swing.GroupLayout.DEFAULT_SIZE, 800, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabSach, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        isUpdate = false;
        if (checkForm()) {
            insert();
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        isUpdate = true;
        if (checkForm()) {
            update();
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        delete();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiActionPerformed
        clearForm();
    }//GEN-LAST:event_btnLamMoiActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        next();
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        last();
    }//GEN-LAST:event_btnLastActionPerformed

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
        first();
    }//GEN-LAST:event_btnFirstActionPerformed

    private void btnPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevActionPerformed
        prev();
    }//GEN-LAST:event_btnPrevActionPerformed

    private void tblSachMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSachMouseClicked
        if (evt.getClickCount() == 1) {
            this.row = tblSach.getSelectedRow();
            this.edit();
        }
    }//GEN-LAST:event_tblSachMouseClicked

    private void txtTimKiemFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTimKiemFocusGained
        focusGained();
    }//GEN-LAST:event_txtTimKiemFocusGained

    private void txtTimKiemFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTimKiemFocusLost
        focusLost();
    }//GEN-LAST:event_txtTimKiemFocusLost

    private void txtTimKiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemKeyReleased
        row = tblSach.getSelectedRow();
        edit();
    }//GEN-LAST:event_txtTimKiemKeyReleased


    DefaultTableModel model;
    UtilDateModel datePickerModel;
    JDatePicker datePicker;
    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
    boolean isUpdate = false;
    SachDAO dao = new SachDAO();
    int row = -1;

    public void generateDatePicker() {
        datePickerModel = new UtilDateModel();
        datePicker = new JDatePicker(datePickerModel);
//        txtThoiGianNhap.setLayout(new BorderLayout());
//        txtThoiGianNhap.add(datePicker, BorderLayout.CENTER);
        datePicker.setCursor(Cursor.getDefaultCursor());
        datePickerModel.setValue(new java.util.Date());
    }

    public void setModelTable() {
        model = new DefaultTableModel(new Object[][]{}, new Object[]{"Mã Sách", "Tên Sách", "Loại Sách", "Tác giả", "Số lượng", "TG nhập"});
        tblSach.setModel(model);
        JTableHeader header = tblSach.getTableHeader();
        header.setFont(new Font("SansSerif", 1, 12));
        header.setForeground(new Color(0, 0, 0));
        tblSach.setForeground(new Color(0, 0, 0));
    }


    public void init() {
        setModelTable();
        fillTable();
        updateStatus();
        generateDatePicker();
//        txtThoiGianNhap.setEditable(false);
    }

    public void focusGained() {
        if (txtTimKiem.getText().equals("Tìm kiếm người học")) {
            txtTimKiem.setText("");
        }
        txtTimKiem.setForeground(Color.black);
    }

    public void focusLost() {
        if (txtTimKiem.getText().equals("")) {
            txtTimKiem.setText("Tìm kiếm người học");
            txtTimKiem.setForeground(new Color(102, 102, 102));
        }

    }

    public void insert() {
        Sach s = getForm();
        try {
            dao.insert(s);
            fillTable();
            clearForm();
            JOptionPane.showMessageDialog(this, "thêm thành công");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "thêm thất bại ");
        }
    }

    public void update() {
        Sach s = getForm();
        if (MsgBox.confirm(this, "Bạn có chắc muốn cập nhật không?")) {
            try {
                dao.update(s);
                fillTable();
                clearForm();
                //JOptionPane.showMessageDialog(this, "Cập nhật thành công");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Cập nhật thất bại ");
            }
        }

    }

    public void delete() {
        Sach s = getForm();
    
            int chon = JOptionPane.showConfirmDialog(this, "Bạn có muốn xóa sách này? ", "DELETE ", JOptionPane.YES_NO_OPTION);
            if (chon == JOptionPane.YES_OPTION) {
                try {
                    dao.delete(s.getMaSach());
                    fillTable();
                    clearForm();
                    JOptionPane.showMessageDialog(this, "Xóa thành công");
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "Xóa không thành công");
                }
            }
    }

    public void first() {
        row = 0;
        tblSach.setRowSelectionInterval(row, row);
        edit();
    }

    public void next() {
        if (row < tblSach.getRowCount() - 1) {
            row++;
            tblSach.setRowSelectionInterval(row, row);
            edit();
        }
    }

    public void prev() {
        if (row > 0) {
            row--;
            tblSach.setRowSelectionInterval(row, row);
            edit();
        }
    }

    public void last() {
        row = tblSach.getRowCount() - 1;
        tblSach.setRowSelectionInterval(row, row);
        edit();
    }

    public void updateStatus() {
        boolean edit = (row >= 0);
        boolean first = (row == 0);
        boolean last = (row == tblSach.getRowCount() - 1);
        //trạng thái form
        txtMaSach.setEditable(!edit);
        btnThem.setEnabled(!edit);
        btnSua.setEnabled(edit);
        btnXoa.setEnabled(edit);
        //trang thai dieu hương
//        btnFirst.setEnabled(edit && !first);
//        btnPrev.setEnabled(edit && !first);
//        btnNext.setEnabled(edit && !last);
//        btnLast.setEnabled(edit && !last);

        String date = sdf.format(new Date());
        txtThoiGianNhap.setText(date);
    }

    public Sach setForm(Sach s) {
        txtMaSach.setText(s.getMaSach());
        txtTenSach.setText(s.getTenSach());
        txtLoaiSach.setText(s.getLoaiSach());
        txtTacGia.setText(s.getTacGia());
        txtSoLuong.setText(s.getSoLuong());
        //txtNgaySinh.setText(String.valueOf(nh.getNgaySinh()));
//        datePickerModel.setValue(s.getTGNhap());
        JFormattedTextField ngayNhap = datePicker.getFormattedTextField();
        ngayNhap.setText(s.getTGNhap());
        
       
        return s;
    }

    public Sach getForm() {
        Sach s = new Sach();
        s.setMaSach(txtMaSach.getText());
        s.setTenSach(txtTenSach.getText());
        s.setLoaiSach(txtLoaiSach.getText());
        s.setTacGia(txtTacGia.getText());
        s.setSoLuong(txtSoLuong.getText());
        String date = sdf.format(datePickerModel.getValue());
        s.setTGNhap(txtThoiGianNhap.getText());
        
        return s;
    }

    public void clearForm() {
        Sach s = new Sach();
        setForm(s);
        txtTenSach.setText("");
        txtMaSach.setText("");
        txtLoaiSach.setText("");
        txtTacGia.setText("");
        txtSoLuong.setText("");
        txtThoiGianNhap.setText("");
        
        row = -1;
        updateStatus();
    }

    public void edit() {
        String manh = String.valueOf(tblSach.getValueAt(row, 0));
        Sach s = dao.selectById(manh);
        setForm(s);
        updateStatus();
    }

    public void fillTable() {
        //DefaultTableModel modelNguoiHoc = (DefaultTableModel) tblNguoiHoc.getModel();
        model.setRowCount(0);
        try {
            List<Sach> list = dao.selectAll();
            
            for (Sach s : list) {
                Object[] row = {s.getMaSach(), s.getTenSach(), s.getLoaiSach(), s.getTacGia(), s.getSoLuong(), s.getTGNhap()};
                model.addRow(row);
//                System.out.print(list.get(1).TGNhap);
            }
        } catch (Exception e) {
        }
    }

    public void timKiemSach() {
        fillTable();
        clearForm();
        row = -1;
        updateStatus();
    }

    public boolean checkForm() {
        if (txtMaSach.getText().equals("") && txtTenSach.getText().equals("") && txtLoaiSach.getText().equals("") 
                && txtTacGia.getText().equals("") && txtSoLuong.getText().equals("") && txtThoiGianNhap.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Xin hãy nhập đủ dữ liệu sau đó ấn Thêm", "Error", 1);
            return false;
        } else if (!txtTenSach.getText().contains(" ")) {
            MsgBox.alert(this, "Vui lòng nhập đầy đủ tên sách!");
            return false;
        }
//else if (!(txtMaSach.getText()).matches("S[0-9]{5}")) {
//            JOptionPane.showMessageDialog(this, "Sai định dạng mã \n VD : S00001", "Error", 1);
//            txtMaSach.requestFocus();
//            return false;
      //  }
        else if (txtLoaiSach.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Xin hãy nhập loại sách", "Error", 1);
            txtLoaiSach.requestFocus();
            return false;
        } else if (txtTacGia.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Xin hãy nhập tên tác giả vào", "Error", 1);
            txtTacGia.requestFocus();
            return false;
        } else if(txtSoLuong.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Xin hãy nhập số lượng sách vào", "Error", 1);
            txtSoLuong.requestFocus();
            return false;
        } 
//         else if (!(txtSoLuong.getText()).matches("S[0-9]{3}")) {
//            JOptionPane.showMessageDialog(this, "Sai định dạng mã \n VD : S00001", "Error", 1);
//            txtMaSach.requestFocus();
//            return false;
//        }
        else if(txtThoiGianNhap.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Xin hãy nhập thời gian nhập sách vào", "Error", 1);
            txtThoiGianNhap.requestFocus();
            return false;
        }
        List<Sach> list = dao.selectAll();
        for (int i = 0; i < list.size(); i++) {
            if (isUpdate) {
            } else {
                if (txtMaSach.getText().equalsIgnoreCase(list.get(i).getMaSach())) {
                    JOptionPane.showMessageDialog(this, "Trùng Mã Người Học", "Error", 1);
                    return false;
                }
            }
        }

        return true;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFirst;
    private javax.swing.JButton btnLamMoi;
    private javax.swing.JButton btnLast;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrev;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblLoaiSach;
    private javax.swing.JLabel lblMaSach;
    private javax.swing.JLabel lblSoLuong;
    private javax.swing.JLabel lblTacGia;
    private javax.swing.JLabel lblTenSach;
    private javax.swing.JLabel lblThoiGianNhap;
    private javax.swing.JLabel lblTimKiem;
    private javax.swing.JPanel pnlBang;
    private javax.swing.JPanel pnlSach;
    private javax.swing.JTabbedPane tabSach;
    private javax.swing.JTable tblSach;
    private javax.swing.JTextField txtLoaiSach;
    private javax.swing.JTextField txtMaSach;
    private javax.swing.JTextField txtSoLuong;
    private javax.swing.JTextField txtTacGia;
    private javax.swing.JTextField txtTenSach;
    private javax.swing.JTextField txtThoiGianNhap;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables
}
