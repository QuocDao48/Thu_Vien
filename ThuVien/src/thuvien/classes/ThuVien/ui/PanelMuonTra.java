/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package thuvien.classes.ThuVien.ui;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Font;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import org.jdatepicker.JDatePicker;
import org.jdatepicker.UtilDateModel;
import thuvien.classes.ThuVien.dao.MuonTraDAO;
import thuvien.classes.ThuVien.entity.MuonTra;
import thuvien.classes.ThuVien.helper.Auth;
import thuvien.classes.ThuVien.helper.MsgBox;

/**
 *
 * @author QUOC DAO
 */
public class PanelMuonTra extends javax.swing.JPanel {

    /**
     * Creates new form MuonTra
     */
    public PanelMuonTra() {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabMuonTra = new javax.swing.JTabbedPane();
        pnlMuonTra = new javax.swing.JPanel();
        txtTacGia = new javax.swing.JTextField();
        lblTenHocSinh = new javax.swing.JLabel();
        lblLop = new javax.swing.JLabel();
        lblTenSach = new javax.swing.JLabel();
        lblLoaiSach = new javax.swing.JLabel();
        lblTacGia = new javax.swing.JLabel();
        lblThoiGianMuon = new javax.swing.JLabel();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        lblMaMuon = new javax.swing.JLabel();
        lblMaHocSinh = new javax.swing.JLabel();
        lblThoiGianTra = new javax.swing.JLabel();
        txtMaHocSinh = new javax.swing.JTextField();
        txtTenHocSinh = new javax.swing.JTextField();
        txtLop = new javax.swing.JTextField();
        txtTenSach = new javax.swing.JTextField();
        btnLamMoi = new javax.swing.JButton();
        txtLoaiSach = new javax.swing.JTextField();
        txtTGMuon = new javax.swing.JTextField();
        txtTGTra = new javax.swing.JTextField();
        txtMaMuon = new javax.swing.JTextField();
        pnlBang = new javax.swing.JPanel();
        btnNext = new javax.swing.JButton();
        btnLast = new javax.swing.JButton();
        btnFirst = new javax.swing.JButton();
        btnPrev = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMuonTra = new javax.swing.JTable();
        txtTimKiem = new javax.swing.JTextField();
        lblTimKiem = new javax.swing.JLabel();

        pnlMuonTra.setPreferredSize(new java.awt.Dimension(800, 400));

        lblTenHocSinh.setText("Tên học sinh");

        lblLop.setText("Lớp");

        lblTenSach.setText("Tên sách");

        lblLoaiSach.setText("Loại sách");

        lblTacGia.setText("Tác giả");

        lblThoiGianMuon.setText("Thời gian mượn");

        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/thuvien/classes/ThuVien/images/Icon_24px/add.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/thuvien/classes/ThuVien/images/Icon_24px/Edit.png"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/thuvien/classes/ThuVien/images/Icon_24px/Delete.png"))); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        lblMaMuon.setText("Mã mượn");

        lblMaHocSinh.setText("Mã học sinh");

        lblThoiGianTra.setText("Thời gian trả");

        btnLamMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/thuvien/classes/ThuVien/images/Icon_24px/Update.png"))); // NOI18N
        btnLamMoi.setText("Làm mới");
        btnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlMuonTraLayout = new javax.swing.GroupLayout(pnlMuonTra);
        pnlMuonTra.setLayout(pnlMuonTraLayout);
        pnlMuonTraLayout.setHorizontalGroup(
            pnlMuonTraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMuonTraLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(lblMaMuon)
                .addGap(187, 187, 187)
                .addComponent(lblLop)
                .addGap(232, 232, 232)
                .addComponent(lblTacGia))
            .addGroup(pnlMuonTraLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(lblMaHocSinh)
                .addGap(170, 170, 170)
                .addComponent(lblTenSach)
                .addGap(195, 195, 195)
                .addComponent(lblThoiGianMuon))
            .addGroup(pnlMuonTraLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(lblTenHocSinh)
                .addGap(163, 163, 163)
                .addComponent(lblLoaiSach)
                .addGap(193, 193, 193)
                .addComponent(lblThoiGianTra))
            .addGroup(pnlMuonTraLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(txtTenHocSinh, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addComponent(txtLoaiSach, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addComponent(txtTGTra, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(pnlMuonTraLayout.createSequentialGroup()
                .addGap(166, 166, 166)
                .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addComponent(btnLamMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(pnlMuonTraLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(pnlMuonTraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtMaMuon, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMaHocSinh, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(54, 54, 54)
                .addGroup(pnlMuonTraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlMuonTraLayout.createSequentialGroup()
                        .addComponent(txtTenSach, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59)
                        .addComponent(txtTGMuon, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlMuonTraLayout.createSequentialGroup()
                        .addComponent(txtLop, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(58, 58, 58)
                        .addComponent(txtTacGia, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        pnlMuonTraLayout.setVerticalGroup(
            pnlMuonTraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMuonTraLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(pnlMuonTraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblMaMuon)
                    .addComponent(lblLop)
                    .addComponent(lblTacGia))
                .addGroup(pnlMuonTraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlMuonTraLayout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(pnlMuonTraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtLop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTacGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlMuonTraLayout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(txtMaMuon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(16, 16, 16)
                .addGroup(pnlMuonTraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblMaHocSinh)
                    .addComponent(lblTenSach)
                    .addComponent(lblThoiGianMuon))
                .addGap(18, 18, 18)
                .addGroup(pnlMuonTraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtMaHocSinh)
                    .addComponent(txtTenSach)
                    .addComponent(txtTGMuon))
                .addGap(9, 9, 9)
                .addGroup(pnlMuonTraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTenHocSinh)
                    .addComponent(lblLoaiSach)
                    .addComponent(lblThoiGianTra))
                .addGap(18, 18, 18)
                .addGroup(pnlMuonTraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTenHocSinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLoaiSach, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTGTra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(pnlMuonTraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnThem)
                    .addComponent(btnSua)
                    .addComponent(btnXoa)
                    .addComponent(btnLamMoi)))
        );

        tabMuonTra.addTab("Mượn trả", pnlMuonTra);

        pnlBang.setPreferredSize(new java.awt.Dimension(800, 400));

        btnNext.setText(">");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnLast.setText(">|");
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });

        btnFirst.setText("|<");
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });

        btnPrev.setText("<");
        btnPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrevActionPerformed(evt);
            }
        });

        tblMuonTra.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã mượn", "Mã HS", "Tên HS", "Lớp", "Tên sách", "Loại sách", "Tác giả ", "TG mượn", "TG Trả"
            }
        ));
        tblMuonTra.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMuonTraMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblMuonTra);

        txtTimKiem.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtTimKiem.setForeground(new java.awt.Color(153, 153, 153));
        txtTimKiem.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTimKiemFocusLost(evt);
            }
        });

        lblTimKiem.setText("Tìm kiếm");

        javax.swing.GroupLayout pnlBangLayout = new javax.swing.GroupLayout(pnlBang);
        pnlBang.setLayout(pnlBangLayout);
        pnlBangLayout.setHorizontalGroup(
            pnlBangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBangLayout.createSequentialGroup()
                .addGap(34, 279, Short.MAX_VALUE)
                .addGroup(pnlBangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBangLayout.createSequentialGroup()
                        .addComponent(lblTimKiem)
                        .addGap(18, 18, 18)
                        .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBangLayout.createSequentialGroup()
                        .addComponent(btnFirst)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPrev)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnNext)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLast)
                        .addGap(302, 302, 302))))
        );
        pnlBangLayout.setVerticalGroup(
            pnlBangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBangLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(pnlBangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTimKiem))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(pnlBangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFirst)
                    .addComponent(btnPrev)
                    .addComponent(btnNext)
                    .addComponent(btnLast))
                .addContainerGap(61, Short.MAX_VALUE))
        );

        tabMuonTra.addTab("Bảng", pnlBang);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tabMuonTra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabMuonTra, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tblMuonTraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMuonTraMouseClicked
        if (evt.getClickCount() == 1) {
            this.row = tblMuonTra.getSelectedRow();
            this.edit();
        }
    }//GEN-LAST:event_tblMuonTraMouseClicked

    private void txtTimKiemFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTimKiemFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTimKiemFocusLost

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        isUpdate = false;
        if (checkForm()) {
            insert();
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        isUpdate = true;
        if (checkForm()) {
            update();
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        delete();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiActionPerformed
        clearForm();
    }//GEN-LAST:event_btnLamMoiActionPerformed

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
        first();
    }//GEN-LAST:event_btnFirstActionPerformed

    private void btnPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevActionPerformed
        prev();
    }//GEN-LAST:event_btnPrevActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        next();
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        last();
    }//GEN-LAST:event_btnLastActionPerformed

    DefaultTableModel model;
    UtilDateModel datePickerModel;
    JDatePicker datePicker;
    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
    boolean isUpdate = false;
    MuonTraDAO dao = new MuonTraDAO();
    int row = -1;

    public void setModelTable() {
        model = new DefaultTableModel(new Object[][]{}, new Object[]{"Mã Mượn", "Mã HS", "Tên HS", "Lớp", "Tên sách", "Loại sách", "Tác giả", "TG mượn", "TG trả"});
        tblMuonTra.setModel(model);
        JTableHeader header = tblMuonTra.getTableHeader();
        header.setFont(new Font("SansSerif", 1, 12));
        header.setForeground(new Color(0, 0, 0));
        tblMuonTra.setForeground(new Color(0, 0, 0));
    }

        public void generateDatePicker() {
        datePickerModel = new UtilDateModel();
        datePicker = new JDatePicker(datePickerModel);
//        JDatePicker datePicker = new JDatePicker(datePickerModel);
//        txtTGMuon.setLayout(new BorderLayout());
//        txtTGMuon.add(datePicker, BorderLayout.CENTER);
//        JDatePicker datePicker1 = new JDatePicker(datePickerModel);
//        txtTGTra.setLayout(new BorderLayout());
//        txtTGTra.add(datePicker1, BorderLayout.CENTER);
        datePicker.setCursor(Cursor.getDefaultCursor());
        datePickerModel.setValue(new java.util.Date());
    }
        
        public void init() {
        setModelTable();
        fillTable();
        updateStatus();
        generateDatePicker();
//        txtTGMuon.setEditable(false);
//        txtTGTra.setEditable(false);
    }
        
        public void focusGained() {
                if (txtTimKiem.getText().equals("Tìm kiếm")) {
                        txtTimKiem.setText("");
                }
                txtTimKiem.setForeground(Color.black);
        }

        public void focusLost() {
                if (txtTimKiem.getText().equals("")) {
                        txtTimKiem.setText("Tìm kiếm");
                        txtTimKiem.setForeground(new Color(102, 102, 102));
                }
        }

        public void fillTable() {
        //DefaultTableModel model = (DefaultTableModel) tblNhanVien.getModel();
        model.setRowCount(0); // Xóa tất cả các hàng trên JTable
        try {
            List<thuvien.classes.ThuVien.entity.MuonTra> list = dao.selectAll();
            
            for (thuvien.classes.ThuVien.entity.MuonTra mt : list) {
                Object[] row = {mt.getMaMuon(), mt.getMaHS(),  mt.getHoTenHS(), mt.getLop(), mt.getTenSach(), mt.getLoaiSach(), mt.getTacGia(), mt.getTGMuon(), mt.getTGTra()};
                model.addRow(row); // Thêm một hàng vào JTable
            }
        } catch (Exception e) {
        }
    }

        thuvien.classes.ThuVien.entity.MuonTra getForm() {
               thuvien.classes.ThuVien.entity.MuonTra mt = new thuvien.classes.ThuVien.entity.MuonTra();
                mt.setMaMuon(txtMaMuon.getText());
                mt.setMaHS(txtMaHocSinh.getText());
                mt.setHoTenHS(txtTenHocSinh.getText());
                mt.setLop(txtLop.getText());
                mt.setTenSach(txtTenSach.getText());
                mt.setLoaiSach(txtLoaiSach.getText());
                mt.setTacGia(txtTacGia.getText());
                mt.setTGMuon(txtTGMuon.getText());
                mt.setTGTra(txtTGMuon.getText());
                return mt;
        }
        
        public void setForm(thuvien.classes.ThuVien.entity.MuonTra mt) {
               txtMaMuon.setText(mt.getMaMuon());
               txtMaHocSinh.setText(mt.getMaHS());
               txtTenHocSinh.setText(mt.getHoTenHS());
               txtLop.setText(mt.getLop());
               txtTenSach.setText(mt.getTenSach());
               txtLoaiSach.setText(mt.getLoaiSach());
               txtTacGia.setText(mt.getTacGia());
               JFormattedTextField ngayMuon = datePicker.getFormattedTextField();
               ngayMuon.setText(mt.getTGMuon());
               JFormattedTextField ngayTra = datePicker.getFormattedTextField();
               ngayTra.setText(mt.getTGTra());
        }
        
        public void updateStatus() {
        boolean edit = (row >= 0);
        boolean first = (row == 0);
        boolean last = (row == tblMuonTra.getRowCount() - 1);
        //trạng thái form
        txtMaMuon.setEditable(!edit);
        btnThem.setEnabled(!edit);
        btnSua.setEnabled(edit);
        btnXoa.setEnabled(edit);
        //trang thai dieu hương
//        btnFirst.setEnabled(edit && !first);
//        btnPrev.setEnabled(edit && !first);
//        btnNext.setEnabled(edit && !last);
//        btnLast.setEnabled(edit && !last);

        String date = sdf.format(new Date());
        txtTGMuon.setText(date);
    }
        
        void clearForm() {
        thuvien.classes.ThuVien.entity.MuonTra mt = new thuvien.classes.ThuVien.entity.MuonTra();
        setForm(mt);
        txtMaMuon.setText("");
        txtMaHocSinh.setText("");
        txtTenHocSinh.setText("");
        txtLop.setText("");
        txtTenSach.setText("");
        txtTacGia.setText("");
        txtTGMuon.setText("");
        txtTGTra.setText("");
        this.row = -1;
        this.updateStatus();
    }
        
        void insert() {
        thuvien.classes.ThuVien.entity.MuonTra mt = getForm();
        try {
            dao.insert(mt);
            this.fillTable();
            this.clearForm();
            MsgBox.alert(this, "Thêm Mới Thành Công !");
        } catch (Exception e) {
            System.out.println(e);
            MsgBox.alert(this, "Thêm Mới Thất Bại !");
        }
    }

    void update() {
        thuvien.classes.ThuVien.entity.MuonTra nh = getForm();
        try {
            dao.update(nh);
            this.fillTable();
            this.clearForm();
            MsgBox.alert(this, "Cập Nhật Thành Công !");
        } catch (Exception e) {
            MsgBox.alert(this, "Cập Nhật Thất Bại !");
        }
    }

    void delete() {
        if (!Auth.isManager()) {
            MsgBox.alert(this, "Bạn không có quyền xóa người học này !");
        } else {
            String manh = txtMaMuon.getText();
            if (MsgBox.confirm(this, "Bạn thực sự muốn xóa chuyên đề này?")) {
                try {
                    dao.delete(manh);
                    this.fillTable();
                    this.clearForm();
                    MsgBox.alert(this, "Xóa Thành Công !");
                } catch (Exception e) {
                    MsgBox.alert(this, "Xóa Thát Bại !");
                }
            }
        }
    }

    public void edit() {
        String manh = String.valueOf(tblMuonTra.getValueAt(row, 0));
        MuonTra mt = dao.selectById(manh);
        setForm(mt);
        updateStatus();
    }
    
    public void first() {
        row = 0;
        tblMuonTra.setRowSelectionInterval(row, row);
        edit();
    }

    public void next() {
        if (row < tblMuonTra.getRowCount() - 1) {
            row++;
            tblMuonTra.setRowSelectionInterval(row, row);
            edit();
        }
    }

    public void prev() {
        if (row > 0) {
            row--;
            tblMuonTra.setRowSelectionInterval(row, row);
            edit();
        }
    }

    public void last() {
        row = tblMuonTra.getRowCount() - 1;
        tblMuonTra.setRowSelectionInterval(row, row);
        edit();
    }
    
    public boolean checkForm(){
//        String ngay = "^(0?[1-9]|[12][0-9]|3[01])[/](0?[1-9]|1[012])[/](19|20)?[0-9]{2}$";
        
        if (txtMaMuon.getText().equals("") 
                && txtMaHocSinh.getText().equals("") 
                && txtTenHocSinh.getText().equals("") 
                && txtLop.getText().equals("")
                && txtTenSach.getText().equals("") 
                && txtLoaiSach.getText().equals("") 
                && txtTacGia.getText().equals("") 
                && txtTGMuon.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Xin hãy nhập đủ dữ liệu sau đó ấn Thêm", "Error", 1);
            return false;
        } else if (!txtTenSach.getText().contains(" ")) {
            MsgBox.alert(this, "Vui lòng nhập đầy đủ thông tin người mượn!");
            return false;
        }
        else if (txtMaMuon.getText().equals("")) {
            MsgBox.alert(this, "Xin hãy nhập Mã mượn");
            txtMaMuon.requestFocus();
            return false;
        }
        else if (txtMaHocSinh.getText().equals("")) {
            MsgBox.alert(this, "Xin hãy nhập mã học sinh");
            txtMaHocSinh.requestFocus();
            return false;
        }
        else if (txtTenHocSinh.getText().equals("")) {
            MsgBox.alert(this, "Xin hãy nhập họ tên học sinh");
            txtTenHocSinh.requestFocus();
            return false;
        }
        else if (txtLop.getText().equals("")) {
            MsgBox.alert(this, "Xin hãy nhập lớp");
            txtLop.requestFocus();
            return false;
        }
        else if (txtTenSach.getText().equals("")) {
            MsgBox.alert(this, "Xin hãy nhập tên sách");
            txtTenSach.requestFocus();
            return false;
        }
        else if (txtLoaiSach.getText().equals("")) {
            MsgBox.alert(this, "Xin hãy nhập loại sách");
            txtLoaiSach.requestFocus();
            return false;
        }
        else if (txtTacGia.getText().equals("")) {
            MsgBox.alert(this, "Xin hãy nhập tên tác giả");
            txtTacGia.requestFocus();
            return false;
        }
        else if (txtTGMuon.getText().equals("")) {
            MsgBox.alert(this, "Xin hãy nhập thời gian mượn theo thứ tự năm tháng ngày");
            txtTGMuon.requestFocus();
            return false;
        }
                
        return true;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFirst;
    private javax.swing.JButton btnLamMoi;
    private javax.swing.JButton btnLast;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrev;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblLoaiSach;
    private javax.swing.JLabel lblLop;
    private javax.swing.JLabel lblMaHocSinh;
    private javax.swing.JLabel lblMaMuon;
    private javax.swing.JLabel lblTacGia;
    private javax.swing.JLabel lblTenHocSinh;
    private javax.swing.JLabel lblTenSach;
    private javax.swing.JLabel lblThoiGianMuon;
    private javax.swing.JLabel lblThoiGianTra;
    private javax.swing.JLabel lblTimKiem;
    private javax.swing.JPanel pnlBang;
    private javax.swing.JPanel pnlMuonTra;
    private javax.swing.JTabbedPane tabMuonTra;
    private javax.swing.JTable tblMuonTra;
    private javax.swing.JTextField txtLoaiSach;
    private javax.swing.JTextField txtLop;
    private javax.swing.JTextField txtMaHocSinh;
    private javax.swing.JTextField txtMaMuon;
    private javax.swing.JTextField txtTGMuon;
    private javax.swing.JTextField txtTGTra;
    private javax.swing.JTextField txtTacGia;
    private javax.swing.JTextField txtTenHocSinh;
    private javax.swing.JTextField txtTenSach;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables
}
